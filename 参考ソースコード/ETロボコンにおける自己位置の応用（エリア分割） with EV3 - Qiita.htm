<!DOCTYPE HTML>
<!-- saved from url=(0058)http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9 -->
<!DOCTYPE html PUBLIC "" ""><HTML xmlns:og="http://ogp.me/ns#"><HEAD><META 
content="IE=11.0000" http-equiv="X-UA-Compatible">

<META charset="UTF-8"><TITLE>ETロボコンにおける自己位置の応用（エリア分割） with EV3    - 
Qiita</TITLE>
<META name="viewport" content="width=device-width,initial-scale=1">
<META name="description" content="&#10;&#10;エリア分割走行&#10;&#10;&#10;エリア分割走行とは&#10;&#10;　「エリア分割走行」とは、ロボットの走行範囲を「エリア」という小単位区間に分割して区切ることで管理し、その区間を順に切り替えながらロボットが走行区間を移動する技術をいいます。&#10;　この技術を用いてうれしい点としては、そのエリアごとに異なるパラメータ値に基づいて走行できるという点になります。具体的な例を挙げれば、コース上で「カーブ入口では速度を下げる」、「直線部分では速度を上げる」などといった微調整が可能になるのです。&#10;　この技...">
<META name="twitter:card" content="summary">
<META name="twitter:site" content="@Qiita">
<META name="twitter:creator" content="PsychoGundam009">
<META content="ETロボコンにおける自己位置の応用（エリア分割） with EV3    - Qiita" 
property="og:title">
<META content="article" property="og:type">
<META content="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
property="og:url">
<META content="http://cdn.qiita.com/assets/qiita-fb-2887e7b4aad86fd8c25cea84846f2236.png" 
property="og:image">
<META content="#エリア分割走行&#10;##エリア分割走行とは&#10;　「エリア分割走行」とは、ロボットの走行範囲を「エリア」という小単位区間に分割して区切ることで管理し、その区間を順に切り替えながらロボットが走行区間を移動する技術をいいます。&#10;　この技術を用い..." 
property="og:description">
<META content="Qiita" property="og:site_name">
<META content="564524038" property="fb:admins"><LINK href="http://cdn.qiita.com/assets/favicons/public/production-4ff10c1e1e2b5fcb353ff9cafdd56c70.ico" 
rel="shortcut icon" type="image/x-icon"><LINK href="http://cdn.qiita.com/assets/favicons/public/apple-touch-icon-f9a6afad761ec2306e10db2736187c8b.png" 
rel="apple-touch-icon" type="image/png"><LINK title="Qiita" href="/opensearch.xml" 
rel="search" type="application/opensearchdescription+xml"><LINK href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/public-8f6b46e6e87d7bfce95ce8f6e214fde2.min.css" 
rel="stylesheet" media="all">
<META name="csrf-param" content="authenticity_token"> 
<META name="csrf-token" content="aF0wgqXiSD47PyOJvBuFTV1nD1ckAaHYY1mmkpb1TH2viNsK2N900K00JZg5zpLDJJwR74U7rMlr8HgVkldM9w==">
<META name="GENERATOR" content="MSHTML 11.00.9600.18666"></HEAD>
<BODY class="without-js"><NOSCRIPT>&lt;iframe height="0" 
src="//www.googletagmanager.com/ns.html?id=GTM-TBQWPN" 
style="display:none;visibility:hidden" width="0"&gt;&lt;/iframe&gt;</NOSCRIPT>
<SCRIPT>
  document.body.className = document.body.className.replace('without-js', '') + ' with-js';
  window.Qiita = {"asset_host":"cdn.qiita.com","TLD":"com","controller_path":"public/items","controller_action":"public/items#show","controller":"items","action":"show","action_path":"public/items#show","env":"production","flash":{},"is_team_page":false,"request_parameters":{"controller":"public/items","action":"show","user_id":"TetsuroAkagawa","type":"items","id":"1798c12e9517e6f1cbe9"},"root_domain":"qiita.com","variant":null,"config":{"mixpanel":{"career":"dd35af27e959781713d63fd7ca898a8d","per_team":"c0a2116368b33b44b5029ebd2cc9b094","public":"be87616606b0e26a87689099aab2c4e5","team":"b7c0342acba2dbc8742484d98788efb3"},"default_locale":"ja","locale":"ja"},"team":null,"user":null,"GIT_BRANCH":null,"DEBUG":false};

</SCRIPT>
 
<DIV class="headerContainer headerContainer-public" role="navigation">
<SCRIPT class="js-react-on-rails-component" type="application/json">{"component_name":"HeaderContainer","props":{"user":null,"team":null,"news":{"type":"募集","content":"QiitaやQiita:Teamを良くしたいエンジニア","url":"http://increments.co.jp/jobs/engineers?utm_source=qiita\u0026utm_medium=header_news"},"initial_unread_count":null,"siteid_image":"http://cdn.qiita.com/siteid-reverse.png","is_team_page":false,"on_team_setting":false,"show_post_menu":true,"show_search_menu":true,"is_fluid":false,"locale":"ja"},"trace":false,"dom_id":"HeaderContainer-react-component-5787eebe-98ad-4876-839b-7879952666d9"}</SCRIPT>
     
<DIV 
id="HeaderContainer-react-component-5787eebe-98ad-4876-839b-7879952666d9"></DIV></DIV>
<DIV id="main">
<SCRIPT type="application/ld+json">{  "@context": "http://schema.org",  "@type": "BreadcrumbList",  "itemListElement": [    {      "@type": "ListItem",      "position": 1,      "item": {        "@id": "/",        "name": "Qiita"      }    },    {      "@type": "ListItem",      "position": 2,      "item": {        "@id": "/items",        "name": "投稿"      }    },    {      "@type": "ListItem",      "position": 3,      "item": {        "@id": "/tags/TOPPERS",        "name": "TOPPERS"      }    }  ]}</SCRIPT>
<ARTICLE itemtype="http://schema.org/Article" itemscope="">
<DIV class="ArticleMainHeader ">
<DIV class="container"></DIV>
<DIV class="container">
<DIV class="row s-flex-align-center">
<DIV class="col-sm-9">
<H1 class="ArticleMainHeader__title" 
itemprop="headline">ETロボコンにおける自己位置の応用（エリア分割） with EV3   </H1>
<UL class="TagList">
  <LI class="TagList__item" data-count="42"><A class="u-link-unstyled TagList__label" 
  href="http://qiita.com/tags/TOPPERS"><IMG class="TagList__icon" alt="TOPPERS" 
  src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/missing-2e17009a0b32a6423572b0e6dc56727e.png"><SPAN>TOPPERS</SPAN></A></LI>
  <LI class="TagList__item" data-count="39"><A class="u-link-unstyled TagList__label" 
  href="http://qiita.com/tags/ET%E3%83%AD%E3%83%9C%E3%82%B3%E3%83%B3"><IMG 
  class="TagList__icon" alt="ETロボコン" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/missing-2e17009a0b32a6423572b0e6dc56727e.png"><SPAN>ETロボコン</SPAN></A></LI>
  <LI class="TagList__item" data-count="20"><A class="u-link-unstyled TagList__label" 
  href="http://qiita.com/tags/EV3RT"><IMG class="TagList__icon" alt="EV3RT" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/missing-2e17009a0b32a6423572b0e6dc56727e.png"><SPAN>EV3RT</SPAN></A></LI>
  <LI class="TagList__item" data-count="61"><A class="u-link-unstyled TagList__label" 
  href="http://qiita.com/tags/EV3"><IMG class="TagList__icon" alt="EV3" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/missing-2e17009a0b32a6423572b0e6dc56727e.png"><SPAN>EV3</SPAN></A></LI></UL></DIV>
<DIV class="col-sm-3">
<DIV class="itemsShowHeaderStock">
<UL class="list-unstyled itemsShowHeaderStock_statusList">
  <LI>
  <DIV class="itemsShowHeaderStock_count stock"><SPAN 
  class="fa fa-thumbs-up"></SPAN><SPAN class="js-likecount">1</SPAN></DIV>
  <DIV class="itemsShowHeaderStock_countText">いいね</DIV></LI>
  <LI>
  <DIV class="itemsShowHeaderStock_count" itemprop="commentCount" content="0 UserComments"><SPAN 
  class="fa fa-comment"></SPAN>0</DIV>
  <DIV class="itemsShowHeaderStock_countText">コメント</DIV></LI></UL></DIV>
<DIV class="js-likebutton" data-props='{"like_status":false,"like_count":1,"uuid":"1798c12e9517e6f1cbe9","likable_type":"Article","position":"article-header"}'></DIV>
<UL class="list-inline ArticleMainHeader__users">
  <LI class="js-hovercard" data-hovercard-target-name="mossandayo"><A href="http://qiita.com/mossandayo" 
  itemprop="url"><IMG class="thumb thumb--xs" alt="mossandayo" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/1476924209.png"></A></LI></UL></DIV></DIV></DIV></DIV>
<DIV class="ArticleAsideHeader">
<DIV class="container">
<DIV class="u-flex u-space-between">
<DIV class="u-flex u-flex-wrap">
<DIV class="u-flex u-align-center s-pdv-5 u-flex-wrap">
<DIV class="ArticleAsideHeader__author"><A href="http://qiita.com/TetsuroAkagawa"><IMG 
class="thumb thumb--xs" alt="5qjm6plv normal" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/5QJm6PLv_normal.jpg"></A> 
<A class="u-link-unstyled" 
href="http://qiita.com/TetsuroAkagawa">TetsuroAkagawa</A> </DIV>
<DIV class="ArticleAsideHeader__date">
<META content="2017-01-29T22:01:03+09:00" itemprop="datePublished"><SPAN title="2017年01月29日に投稿" 
data-toggle="tooltip"><time itemprop="dateModified" datetime="2017-02-14T11:48:04+09:00">2017年02月14日</time>に更新</SPAN></DIV></DIV>
<DIV class="u-flex u-align-center s-pdv-5 mobile-hidden">
<DIV class="ArticleAsideHeader__revision"><A title="編集履歴" href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9/revisions" 
data-toggle="tooltip"><SPAN class="fa fa-history"></SPAN></A><SPAN class="ArticleAsideHeader__revisionCount">4</SPAN></DIV></DIV>
<DIV class="u-flex u-align-center s-pdv-5 mobile-hidden"></DIV></DIV>
<DIV class="u-flex u-align-center s-flex-justiry-between s-pdv-5 u-shrink-0">
<DIV class="ArticleAsideHeader__stock">
<DIV class="js-stockbutton" data-props='{"stock_status":false}' data-position="top"></DIV></DIV>
<DIV class="dropdown"><A class="dropdown-toggle" href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#" 
data-toggle="dropdown"><SPAN class="fa fa-ellipsis-h fa-lg"></SPAN></A>
<UL class="dropdown-menu dropdown-menu-right">
  <LI class="dropdown__item--mobile"><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9/revisions"><SPAN 
  class="fa fa-fw fa-history"></SPAN> 編集履歴<SPAN>(4)</SPAN></A></LI>
  <LI><A 
  href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9.md"><SPAN 
  class="fa fa-fw fa-file-text-o"></SPAN> Markdownで本文を見る</A></LI>
  <LI><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#" 
  data-toggle="modal" data-target=".js-report-form"><SPAN class="fa fa-fw fa-flag"></SPAN> 
  問題がある投稿を報告する</A></LI></UL></DIV></DIV></DIV></DIV></DIV>
<DIV class="container">
<DIV class="row" id="article-body-wrapper">
<DIV class="col-sm-9"><SECTION class="markdownContent markdownContent-headingEnabled js-task-list-container clearfix position-relative" 
id="item-1798c12e9517e6f1cbe9" itemprop="articleBody">
<H1><SPAN class="fragment" id="エリア分割走行"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%A8%E3%83%AA%E3%82%A2%E5%88%86%E5%89%B2%E8%B5%B0%E8%A1%8C"><I 
class="fa fa-link"></I></A>エリア分割走行</H1>
<H2><SPAN class="fragment" id="エリア分割走行とは"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%A8%E3%83%AA%E3%82%A2%E5%88%86%E5%89%B2%E8%B5%B0%E8%A1%8C%E3%81%A8%E3%81%AF"><I 
class="fa fa-link"></I></A>エリア分割走行とは</H2>
<P>　「エリア分割走行」とは、ロボットの走行範囲を「エリア」という小単位区間に分割して区切ることで管理し、その区間を順に切り替えながらロボットが走行区間を移動する技術をいいます。<BR>
　この技術を用いてうれしい点としては、そのエリアごとに異なるパラメータ値に基づいて走行できるという点になります。具体的な例を挙げれば、コース上で「カーブ入口では速度を下げる」、「直線部分では速度を上げる」などといった微調整が可能になるのです。<BR>
　この技術を用いるためには、まずは走行するコースの寸法が分からないといけません。ですので、エリア分割走行を実装するにあたっては、まず、コース上のどこで区切るのかを決めて、その部分の寸法を計測することから始めます。これを「コース分析」と呼びます。私達が行っているコース分析手法としては、本番コースのPDFデータから距離を計測する手法を用いています。</P>
<H2><SPAN class="fragment" id="コース分析"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%B3%E3%83%BC%E3%82%B9%E5%88%86%E6%9E%90"><I 
class="fa fa-link"></I></A>コース分析</H2>
<H3><SPAN class="fragment" id="コース分析の概要"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%B3%E3%83%BC%E3%82%B9%E5%88%86%E6%9E%90%E3%81%AE%E6%A6%82%E8%A6%81"><I 
class="fa fa-link"></I></A>コース分析の概要</H3>
<P>　コース分析を行う手法は様々あります。それこそ参加チームそれぞれで微妙に異なる手法で計測しているのではないでしょうか。よって、ここでは私が所属しているチーム（Monolith，東北地区所属）で行われている手法を説明します。</P>
<H3><SPAN class="fragment" id="コース分析の手順"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%B3%E3%83%BC%E3%82%B9%E5%88%86%E6%9E%90%E3%81%AE%E6%89%8B%E9%A0%86"><I 
class="fa fa-link"></I></A>コース分析の手順</H3>
<P>　手順としては以下の通りとなります。</P>
<OL>
  <LI>
  <P>コースのPDFデータを用意する<BR>　コースのPDFデータはETロボコンの参加チーム専用ページにて公開されています。このPDFデータをもとに計測作業を行うので、ダウンロードしておいてください。</P></LI>
  <LI>
  <P>コースを任意のエリアに分割して区切る<BR>　コースをエリアで分割するために、どの位置でエリアを区切るかを決めます。基本は直線部分とカーブ部分とを切り分けていきます。詳細は下記の「エリアの分け方」の項目にて記述します。</P></LI>
  <LI>
  <P>エリアごとの距離を計測する<BR>　エリアを区切ったら、その区切ったエリアの区間距離を計測します。私達のチームでは「Visio」を使っていますが、ここではより簡単に計測できる「Acrobat 
  DC」を使った手法を紹介します。詳細は下記の「エリアの区間距離計測」の項目にて記述します。</P></LI></OL>
<H3><SPAN class="fragment" id="エリアの分け方"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%AE%E5%88%86%E3%81%91%E6%96%B9"><I 
class="fa fa-link"></I></A>エリアの分け方</H3>
<P>　カーブ部分は大体一定の曲率（単一の円で構成されているカーブ）の場合が多いため、直線とカーブの円が接している位置を基準に区切るといいでしょう。下のコース画像（図1）は「Visio」を使って作製したものですが、円の図形と合わせるだけならば、ペイントでもPowerPointでもなんでも結構です。（ただVisioの方が、後述の距離計測や、曲率計測が簡単に行えるのでお勧めです）</P>
<P><A href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/cbf0ae06-0d32-655f-03e9-7439833a2209.jpg" 
target="_blank" rel="nofollow noopener"><IMG alt="course1.JPG" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/cbf0ae06-0d32-655f-03e9-7439833a2209.jpg"></A><BR>
図1：コースのエリア分割図（単一の円）</P>
<P>　しかし、ETロボコン2016コースでのカーブの中には、複数の曲率をもつカーブ（複数の円で構成されたカーブ）がありました。こういったカーブは、構成されている円の曲率に合わせてカーブ内を区切ると良いでしょう（図2）。</P>
<P><A href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/37c8f6b0-d890-8630-9167-34786bfd48db.jpg" 
target="_blank" rel="nofollow noopener"><IMG alt="course2.JPG" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/37c8f6b0-d890-8630-9167-34786bfd48db.jpg"></A><BR>
図2：コースのエリア分割図（複数の円）</P>
<P>　といっても、あまりエリアの数が多くなってしまうと、あとで調整が大変になってしまうので、できる限りエリアの数は少なくなるように区切るのがいいでしょう。</P>
<H3><SPAN class="fragment" id="エリアの区間距離計測"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%AE%E5%8C%BA%E9%96%93%E8%B7%9D%E9%9B%A2%E8%A8%88%E6%B8%AC"><I 
class="fa fa-link"></I></A>エリアの区間距離計測</H3>
<P>　ここでは「Acrobat 
DC」内のツールで用意されている「ものさしツール」を利用して、エリアの区間距離を計測していきます。また、この測定方法で表示された数値はPDFデータ上での長さでしかないので、実際のコースでの長さを出すためにも、PDFデータの縮尺を考慮して、実寸距離を計算してください。（ちなみにETロボコン2016に公開されていた本番コースPDFデータは1/2縮尺でした）<BR>
　それでは、まずコースのPDFデータを「Acrobat DC」で開きます。その後、「ツール」タブをクリックします。<BR><A href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/bad004b6-120e-9548-0927-423f9ecee0f9.jpg" 
target="_blank" rel="nofollow noopener"><IMG alt="DC1.JPG" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/bad004b6-120e-9548-0927-423f9ecee0f9.jpg"></A></P>
<P>ツールの一覧からものさしを選択します。<BR><A href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/396acfd0-bf44-8fc2-4b85-7a930563456e.jpg" 
target="_blank" rel="nofollow noopener"><IMG alt="DC2.JPG" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/396acfd0-bf44-8fc2-4b85-7a930563456e.jpg"></A></P>
<P>測定したい部分に合わせて「測定タイプ」を選択します。直線距離を測定したい場合は、一番左の「距離ツール」を選択してください。このタイプでは、二点間の距離が表示されます。（図中で表示されている距離は、ツールの矢印が見えやすいように、私が個人的に寸法を色々と調節した結果として表示されている数値なので、実際のコース上の距離とは異なります）<BR><A 
href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/7f3962ce-078e-1159-fbe2-e2cfa096140f.jpg" 
target="_blank" rel="nofollow noopener"><IMG alt="DC3.JPG" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/7f3962ce-078e-1159-fbe2-e2cfa096140f.jpg"></A></P>
<P>　カーブの距離を測定するためには「周辺ツール」を使います。これは複数点を指定して、その点間の距離の合計を表示するツールです。<BR><A href="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/1cac8a24-b4fe-90c0-11d7-e00285326b10.jpg" 
target="_blank" rel="nofollow noopener"><IMG alt="DC5.JPG" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/1cac8a24-b4fe-90c0-11d7-e00285326b10.jpg"></A><BR>
　<BR>　以上により、各エリアの区間距離を測定し終えたら、コース分析は終了です。</P>
<H2><SPAN class="fragment" id="エリア分割走行の実装"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%A8%E3%83%AA%E3%82%A2%E5%88%86%E5%89%B2%E8%B5%B0%E8%A1%8C%E3%81%AE%E5%AE%9F%E8%A3%85"><I 
class="fa fa-link"></I></A>エリア分割走行の実装</H2>
<P>　エリア分割走行の実装方法ですが、簡単に言ってしまえば「走行距離から現在エリア位置を判別して、その現在位置のエリア情報に基づいて走行する」というだけです。とはいえ、この「エリア分割走行」には決まった形の実装方法があるわけではありませんので、以下に示すサンプルプログラムは「極力まで簡略化したエリア分割走行」の実装一例として用意しました。</P>
<H3><SPAN class="fragment" id="サンプルプログラムの解説"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AE%E8%A7%A3%E8%AA%AC"><I 
class="fa fa-link"></I></A>サンプルプログラムの解説</H3>
<P>　今回のサンプルプログラムはデモ用として「ロボットが進んだ距離に応じてエリアの切り替えを実行し、現在走行中のエリア情報をLCD（EV3の液晶画面）に表示させる」という処理が記述されています。実行の際は、HackEVの車体を持ち上げて、タイヤの両輪を回してみてください。画面の表示が変わるはずです。</P>
<P>　まずは、エリア情報周辺の解説をします。今回管理しているエリア情報は「エリアの距離」「エリア内での走行速度」「エリア内でのP，I，D係数」の五つになります。サンプルプログラム上では 
 _Area_struct 型の配列 Area_Info[] 
の中に格納されています。ここで格納されているエリア情報は適当に数値を入力したダミーデータとなります。<BR>
　なお、このようにエリアを配列として管理する記述形式は、本当はあまり良い形式ではありません。今回はデモ用としてエリアを7つまでしか用意しませんでしたが、実際の走行ではそれ以上の数のエリアを管理することになります。そういった場合において、配列でエリアを管理してしまうと、長い行にわたってエリア情報を記述しなくてはならず、プログラムが読みにくくなります。さらにいうと、パラメータ値の調整作業の際にも微調整の度にビルドしなくてはならず、非常に面倒です。よってバグの温床にもなるので、余裕があればcsvファイルなどにまとめて管理するなどの工夫をしましょう。</P>
<P>　続いて、エリア情報内の各パラメータ値について説明します。<BR>
　「エリアの距離」とは、先程のコース分析で計測した「エリアの長さ」になります。ここではミリメートル単位で管理しています。<BR>
　「エリア内での走行速度」とは、そのエリア内では、どの程度の速さで走行するのかを示したパラメータ値になります。ここではモータに送る制御値として0～100の範囲の値で速度を制御します。本当であれば、ここは速度計などの関数を自作して、速度単位のパラメータ値でもって制御するのが一番なのですが、複雑になるので割愛します。<BR>
　「P，I，D係数」について知らないという場合は、「車体が綺麗に黒線に沿って走るための値」と思ってください。長くなってしまうので、ここでは詳しく説明いたしません。</P>
<P>　続いて、Area.cでは「エリアの更新」、「エリア情報の取得」の関数が記述されています。<BR>
　エリアの更新では、現在の走行距離とエリアの区間距離とを比較し、その区間距離まで走行したら、次のエリアに切り替えるという処理を行っています。なお、ここではエリアの切り替えの度に距離計をリセットしています。この処理は、長距離の走行中に蓄積されていく距離計の誤差をリセットするために行っています。<BR>
　app.cでは、主にLCDにエリア情報を出力させる処理が記述されています。エリアの切り替えが発生したら、LCDへの出力を実行するような処理となっています。そのほかの部分は、それぞれの更新を行う関数を呼び出しているだけです。<BR>
　なお、ここで利用されている計測器の関数は、私の過去の投稿記事で解説した計測器を利用しています。</P>
<H3><SPAN class="fragment" id="サンプルプログラム"></SPAN><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0"><I 
class="fa fa-link"></I></A>サンプルプログラム</H3>
<DIV class="code-frame" data-lang="c">
<DIV class="code-lang"><SPAN class="bold">Area.c</SPAN></DIV>
<DIV class="highlight">
<PRE><SPAN class="cp">#include "Area.h"</SPAN>

<SPAN class="cp">#define AREA_INFO_AMOUNT 7</SPAN>

<SPAN class="cm">/*エリア情報*/</SPAN>
<SPAN class="n">_Area_struct</SPAN> <SPAN class="n">Area_Info</SPAN><SPAN class="p">[</SPAN><SPAN class="n">AREA_INFO_AMOUNT</SPAN><SPAN class="p">]</SPAN> <SPAN class="o">=</SPAN> <SPAN class="p">{</SPAN>
   <SPAN class="cm">/* distance, speed, P, I, D */</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">100.0</SPAN> <SPAN class="p">,</SPAN> <SPAN class="mi">100</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.2</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.2</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*0 直線*/</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">300.0</SPAN> <SPAN class="p">,</SPAN>  <SPAN class="mi">50</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.3</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*1 右カーブ*/</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">100.0</SPAN> <SPAN class="p">,</SPAN>  <SPAN class="mi">40</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.2</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.1</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*2 直線*/</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">200.0</SPAN> <SPAN class="p">,</SPAN> <SPAN class="mi">100</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.2</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.5</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*3 2本橋*/</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">300.0</SPAN> <SPAN class="p">,</SPAN>  <SPAN class="mi">70</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.3</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.6</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*4 直線*/</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">100.0</SPAN> <SPAN class="p">,</SPAN>  <SPAN class="mi">80</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.5</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.3</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.2</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*5 左カーブ*/</SPAN>
    <SPAN class="p">{</SPAN><SPAN class="mf">200.0</SPAN> <SPAN class="p">,</SPAN> <SPAN class="mi">100</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.4</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.2</SPAN><SPAN class="p">,</SPAN> <SPAN class="mf">0.9</SPAN><SPAN class="p">},</SPAN> <SPAN class="cm">/*6 直線*/</SPAN>
<SPAN class="p">};</SPAN>

<SPAN class="k">static</SPAN> <SPAN class="kt">int</SPAN> <SPAN class="n">Area_curArea</SPAN> <SPAN class="o">=</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">;</SPAN> <SPAN class="c1">//現在走行中のエリア番号</SPAN>

<SPAN class="cm">/*********************************************</SPAN>
<SPAN class="cm">エリア情報を「更新するかの判定」と「更新の実行」を行う関数</SPAN>
<SPAN class="cm">true：エリア情報を更新する</SPAN>
<SPAN class="cm">false：エリア情報を更新しない</SPAN>
<SPAN class="cm">**********************************************/</SPAN>
<SPAN class="kt">bool_t</SPAN> <SPAN class="nf">Area_update</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">Area_curDistance</SPAN> <SPAN class="o">=</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">;</SPAN>

    <SPAN class="n">Area_curDistance</SPAN> <SPAN class="o">=</SPAN> <SPAN class="n">Distance_getDistance</SPAN><SPAN class="p">();</SPAN>

    <SPAN class="k">if</SPAN><SPAN class="p">(</SPAN> <SPAN class="n">Area_curDistance</SPAN> <SPAN class="o">&gt;=</SPAN> <SPAN class="n">Area_Info</SPAN><SPAN class="p">[</SPAN><SPAN class="n">Area_curArea</SPAN><SPAN class="p">].</SPAN><SPAN class="n">distance</SPAN> <SPAN class="p">){</SPAN>
        <SPAN class="n">Area_curArea</SPAN><SPAN class="o">++</SPAN><SPAN class="p">;</SPAN>
        <SPAN class="n">Distance_init</SPAN><SPAN class="p">();</SPAN>
        <SPAN class="k">return</SPAN> <SPAN class="nb">true</SPAN><SPAN class="p">;</SPAN>
    <SPAN class="p">}</SPAN>

    <SPAN class="k">return</SPAN> <SPAN class="nb">false</SPAN><SPAN class="p">;</SPAN>
<SPAN class="p">}</SPAN>

<SPAN class="cm">/**********************************</SPAN>
<SPAN class="cm">エリア情報を取得する関数</SPAN>
<SPAN class="cm">***********************************/</SPAN>
<SPAN class="n">_Area_struct</SPAN> <SPAN class="nf">Area_getAreaInfo</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
        <SPAN class="k">return</SPAN> <SPAN class="n">Area_Info</SPAN><SPAN class="p">[</SPAN><SPAN class="n">Area_curArea</SPAN><SPAN class="p">];</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV></DIV>
<DIV class="code-frame" data-lang="c">
<DIV class="code-lang"><SPAN class="bold">Area.h</SPAN></DIV>
<DIV class="highlight">
<PRE><SPAN class="cp">#ifndef _AREA_H_</SPAN>
<SPAN class="cp">#define _AREA_H_</SPAN>

<SPAN class="cp">#include "ev3api.h"</SPAN>
<SPAN class="cp">#include "Distance.h"</SPAN>

<SPAN class="k">typedef</SPAN> <SPAN class="k">struct</SPAN> <SPAN class="n">Area_struct</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">distance</SPAN><SPAN class="p">;</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">speed</SPAN><SPAN class="p">;</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">p</SPAN><SPAN class="p">;</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">i</SPAN><SPAN class="p">;</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">d</SPAN><SPAN class="p">;</SPAN>
<SPAN class="p">}</SPAN> <SPAN class="n">_Area_struct</SPAN><SPAN class="p">;</SPAN>

<SPAN class="cm">/*********************************************</SPAN>
<SPAN class="cm">エリア情報を「更新するかの判定」と「更新の実行」を行う関数</SPAN>
<SPAN class="cm">true：エリア情報を更新する</SPAN>
<SPAN class="cm">false：エリア情報を更新しない</SPAN>
<SPAN class="cm">**********************************************/</SPAN>
<SPAN class="kt">bool_t</SPAN> <SPAN class="nf">Area_update</SPAN><SPAN class="p">();</SPAN>

<SPAN class="cm">/**********************************</SPAN>
<SPAN class="cm">エリア情報を取得する関数</SPAN>
<SPAN class="cm">***********************************/</SPAN>
<SPAN class="n">_Area_struct</SPAN> <SPAN class="nf">Area_getAreaInfo</SPAN><SPAN class="p">();</SPAN>
</PRE></DIV></DIV>
<DIV class="code-frame" data-lang="c">
<DIV class="code-lang"><SPAN class="bold">app.c</SPAN></DIV>
<DIV class="highlight">
<PRE><SPAN class="cp">#include "ev3api.h"</SPAN>
<SPAN class="cp">#include "app.h"</SPAN>
<SPAN class="cp">#include "Distance.h"</SPAN>
<SPAN class="cp">#include "Direction.h"</SPAN>
<SPAN class="cp">#include "Area.h"</SPAN>

<SPAN class="cp">#include &lt;stdio.h&gt;</SPAN>
<SPAN class="cp">#include &lt;stdlib.h&gt;</SPAN>

<SPAN class="cp">#if defined(BUILD_MODULE)</SPAN>
<SPAN class="cp">#include "module_cfg.h"</SPAN>
<SPAN class="cp">#else</SPAN>
<SPAN class="cp">#include "kernel_cfg.h"</SPAN>
<SPAN class="cp">#endif</SPAN>

<SPAN class="cp">#define DEBUG</SPAN>

<SPAN class="cp">#ifdef DEBUG</SPAN>
<SPAN class="cp">#define _debug(x) (x)</SPAN>
<SPAN class="cp">#else</SPAN>
<SPAN class="cp">#define _debug(x)</SPAN>
<SPAN class="cp">#endif</SPAN>

<SPAN class="cm">/* LCD周辺定義（特に気にしなくてもよい） */</SPAN>
<SPAN class="cp">#define CALIB_FONT (EV3_FONT_SMALL)</SPAN>
<SPAN class="cp">#define STR 5</SPAN>
<SPAN class="cp">#define CALIB_FONT_WIDTH (6</SPAN><SPAN class="cm">/*TODO: magic number*/</SPAN><SPAN class="cp">)</SPAN>
<SPAN class="cp">#define CALIB_FONT_HEIGHT (8</SPAN><SPAN class="cm">/*TODO: magic number*/</SPAN><SPAN class="cp">)</SPAN>

<SPAN class="kt">void</SPAN> <SPAN class="nf">main_task</SPAN><SPAN class="p">(</SPAN><SPAN class="kt">intptr_t</SPAN> <SPAN class="n">unused</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="kt">char</SPAN> <SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="n">STR</SPAN><SPAN class="p">][</SPAN><SPAN class="mi">30</SPAN><SPAN class="p">];</SPAN>   <SPAN class="c1">// LCD出力用文字列変数</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">cur_dir</SPAN> <SPAN class="o">=</SPAN> <SPAN class="mf">0.0</SPAN><SPAN class="p">;</SPAN> <SPAN class="c1">// 方位計の現在値</SPAN>
    <SPAN class="kt">float</SPAN> <SPAN class="n">cur_dis</SPAN> <SPAN class="o">=</SPAN> <SPAN class="mf">0.0</SPAN><SPAN class="p">;</SPAN> <SPAN class="c1">// 距離計の現在値</SPAN>
    <SPAN class="n">_Area_struct</SPAN> <SPAN class="n">cur_areaInfo</SPAN><SPAN class="p">;</SPAN> <SPAN class="c1">// 現在走行中のエリア情報</SPAN>

    <SPAN class="cm">/* モーター出力ポートの設定 */</SPAN>
    <SPAN class="n">ev3_motor_config</SPAN><SPAN class="p">(</SPAN><SPAN class="n">EV3_PORT_C</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">LARGE_MOTOR</SPAN><SPAN class="p">);</SPAN>
    <SPAN class="n">ev3_motor_config</SPAN><SPAN class="p">(</SPAN><SPAN class="n">EV3_PORT_B</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">LARGE_MOTOR</SPAN><SPAN class="p">);</SPAN>

    <SPAN class="cm">/* 計測器初期化 */</SPAN>
    <SPAN class="n">Distance_init</SPAN><SPAN class="p">();</SPAN>
    <SPAN class="n">Direction_init</SPAN><SPAN class="p">();</SPAN>

    <SPAN class="k">while</SPAN><SPAN class="p">(</SPAN><SPAN class="mi">1</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">{</SPAN>
        <SPAN class="c1">// 計測器更新 </SPAN>
        <SPAN class="n">Distance_update</SPAN><SPAN class="p">();</SPAN>
        <SPAN class="n">Direction_update</SPAN><SPAN class="p">();</SPAN>

        <SPAN class="c1">// 計測器の現在値を格納</SPAN>
        <SPAN class="n">cur_dis</SPAN> <SPAN class="o">=</SPAN> <SPAN class="n">Distance_getDistance</SPAN><SPAN class="p">();</SPAN>
        <SPAN class="n">cur_dir</SPAN> <SPAN class="o">=</SPAN> <SPAN class="n">Direction_getDirection</SPAN><SPAN class="p">();</SPAN>

        <SPAN class="c1">// エリア更新 -&gt; 更新されたらLCDに出力</SPAN>
        <SPAN class="k">if</SPAN><SPAN class="p">(</SPAN> <SPAN class="n">Area_update</SPAN><SPAN class="p">()</SPAN> <SPAN class="o">==</SPAN> <SPAN class="nb">true</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">{</SPAN>
            <SPAN class="c1">// ここからLCDに出力する処理（中身は気にしなくても良い）</SPAN>
            <SPAN class="n">cur_areaInfo</SPAN> <SPAN class="o">=</SPAN> <SPAN class="n">Area_getAreaInfo</SPAN><SPAN class="p">();</SPAN>
            <SPAN class="n">ev3_lcd_fill_rect</SPAN><SPAN class="p">(</SPAN><SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">EV3_LCD_WIDTH</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">EV3_LCD_HEIGHT</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">EV3_LCD_WHITE</SPAN><SPAN class="p">);</SPAN>
            <SPAN class="n">sprintf</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">0</SPAN><SPAN class="p">],</SPAN> <SPAN class="s">".distance = %d"</SPAN><SPAN class="p">,</SPAN> <SPAN class="p">(</SPAN><SPAN class="kt">int</SPAN><SPAN class="p">)</SPAN><SPAN class="n">cur_areaInfo</SPAN><SPAN class="p">.</SPAN><SPAN class="n">distance</SPAN> <SPAN class="p">);</SPAN>
            <SPAN class="n">sprintf</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">1</SPAN><SPAN class="p">],</SPAN> <SPAN class="s">".speed = %d"</SPAN>   <SPAN class="p">,</SPAN> <SPAN class="p">(</SPAN><SPAN class="kt">int</SPAN><SPAN class="p">)</SPAN><SPAN class="n">cur_areaInfo</SPAN><SPAN class="p">.</SPAN><SPAN class="n">speed</SPAN> <SPAN class="p">);</SPAN>
            <SPAN class="n">sprintf</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">2</SPAN><SPAN class="p">],</SPAN> <SPAN class="s">".p = %d"</SPAN>       <SPAN class="p">,</SPAN> <SPAN class="p">(</SPAN><SPAN class="kt">int</SPAN><SPAN class="p">)(</SPAN><SPAN class="n">cur_areaInfo</SPAN><SPAN class="p">.</SPAN><SPAN class="n">p</SPAN> <SPAN class="o">*</SPAN> <SPAN class="mi">10</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">);</SPAN>
            <SPAN class="n">sprintf</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">3</SPAN><SPAN class="p">],</SPAN> <SPAN class="s">".i = %d"</SPAN>       <SPAN class="p">,</SPAN> <SPAN class="p">(</SPAN><SPAN class="kt">int</SPAN><SPAN class="p">)(</SPAN><SPAN class="n">cur_areaInfo</SPAN><SPAN class="p">.</SPAN><SPAN class="n">i</SPAN> <SPAN class="o">*</SPAN> <SPAN class="mi">10</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">);</SPAN>
            <SPAN class="n">sprintf</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">4</SPAN><SPAN class="p">],</SPAN> <SPAN class="s">".d = %d"</SPAN>       <SPAN class="p">,</SPAN> <SPAN class="p">(</SPAN><SPAN class="kt">int</SPAN><SPAN class="p">)(</SPAN><SPAN class="n">cur_areaInfo</SPAN><SPAN class="p">.</SPAN><SPAN class="n">d</SPAN> <SPAN class="o">*</SPAN> <SPAN class="mi">10</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">);</SPAN>
            <SPAN class="n">ev3_lcd_draw_string</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">0</SPAN><SPAN class="p">],</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">CALIB_FONT_HEIGHT</SPAN><SPAN class="o">*</SPAN><SPAN class="mi">2</SPAN><SPAN class="p">);</SPAN>
            <SPAN class="n">ev3_lcd_draw_string</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">1</SPAN><SPAN class="p">],</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">CALIB_FONT_HEIGHT</SPAN><SPAN class="o">*</SPAN><SPAN class="mi">3</SPAN><SPAN class="p">);</SPAN>
            <SPAN class="n">ev3_lcd_draw_string</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">2</SPAN><SPAN class="p">],</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">CALIB_FONT_HEIGHT</SPAN><SPAN class="o">*</SPAN><SPAN class="mi">4</SPAN><SPAN class="p">);</SPAN>
            <SPAN class="n">ev3_lcd_draw_string</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">3</SPAN><SPAN class="p">],</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">CALIB_FONT_HEIGHT</SPAN><SPAN class="o">*</SPAN><SPAN class="mi">5</SPAN><SPAN class="p">);</SPAN>
            <SPAN class="n">ev3_lcd_draw_string</SPAN><SPAN class="p">(</SPAN><SPAN class="n">str</SPAN><SPAN class="p">[</SPAN><SPAN class="mi">4</SPAN><SPAN class="p">],</SPAN> <SPAN class="mi">0</SPAN><SPAN class="p">,</SPAN> <SPAN class="n">CALIB_FONT_HEIGHT</SPAN><SPAN class="o">*</SPAN><SPAN class="mi">6</SPAN><SPAN class="p">);</SPAN>
            <SPAN class="c1">// ここまでLCDに出力する処理（中身は気にしなくても良い）</SPAN>
        <SPAN class="p">}</SPAN>

    <SPAN class="p">}</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV></DIV>
<P>　エリア分割走行の解説は以上となります。このエリア分割走行の技術は、ETロボコンに出場するにあたって、多くのチームが工夫して実装している「キーポイント」ともいえる技術なので、まだ実装したことがないという場合は、コース分析と合わせて是非挑戦してみてください。</P>
<DIV class="hidden">
<FORM class="js-task-list-update" action="/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
method="post" 
accept-charset="UTF-8"><INPUT name="utf8" type="hidden" value="✓"><INPUT name="_method" type="hidden" value="patch"><INPUT name="authenticity_token" type="hidden" value="35os0ny7DtKJfJF3qu7Bngqx9zy3eO0fa2lVJkp8jmoYT8daAYYyPB93l2YvO9YQc0rphBZC4A5jwIuhTt6O4A=="><INPUT name="updated_at_confirmation_in_unixtime" class="js-task-list-updated-at" id="updated_at_confirmation_in_unixtime" type="hidden" value="1487040484"><TEXTAREA name="raw_body" class="js-task-list-field" id="raw_body">#エリア分割走行
##エリア分割走行とは
　「エリア分割走行」とは、ロボットの走行範囲を「エリア」という小単位区間に分割して区切ることで管理し、その区間を順に切り替えながらロボットが走行区間を移動する技術をいいます。
　この技術を用いてうれしい点としては、そのエリアごとに異なるパラメータ値に基づいて走行できるという点になります。具体的な例を挙げれば、コース上で「カーブ入口では速度を下げる」、「直線部分では速度を上げる」などといった微調整が可能になるのです。
　この技術を用いるためには、まずは走行するコースの寸法が分からないといけません。ですので、エリア分割走行を実装するにあたっては、まず、コース上のどこで区切るのかを決めて、その部分の寸法を計測することから始めます。これを「コース分析」と呼びます。私達が行っているコース分析手法としては、本番コースのPDFデータから距離を計測する手法を用いています。
##コース分析
###コース分析の概要
　コース分析を行う手法は様々あります。それこそ参加チームそれぞれで微妙に異なる手法で計測しているのではないでしょうか。よって、ここでは私が所属しているチーム（Monolith，東北地区所属）で行われている手法を説明します。
###コース分析の手順
　手順としては以下の通りとなります。

1. コースのPDFデータを用意する
　コースのPDFデータはETロボコンの参加チーム専用ページにて公開されています。このPDFデータをもとに計測作業を行うので、ダウンロードしておいてください。

1. コースを任意のエリアに分割して区切る
　コースをエリアで分割するために、どの位置でエリアを区切るかを決めます。基本は直線部分とカーブ部分とを切り分けていきます。詳細は下記の「エリアの分け方」の項目にて記述します。

3. エリアごとの距離を計測する
　エリアを区切ったら、その区切ったエリアの区間距離を計測します。私達のチームでは「Visio」を使っていますが、ここではより簡単に計測できる「Acrobat DC」を使った手法を紹介します。詳細は下記の「エリアの区間距離計測」の項目にて記述します。

###エリアの分け方
　カーブ部分は大体一定の曲率（単一の円で構成されているカーブ）の場合が多いため、直線とカーブの円が接している位置を基準に区切るといいでしょう。下のコース画像（図1）は「Visio」を使って作製したものですが、円の図形と合わせるだけならば、ペイントでもPowerPointでもなんでも結構です。（ただVisioの方が、後述の距離計測や、曲率計測が簡単に行えるのでお勧めです）

![course1.JPG](https://qiita-image-store.s3.amazonaws.com/0/153774/cbf0ae06-0d32-655f-03e9-7439833a2209.jpeg)
図1：コースのエリア分割図（単一の円）

　しかし、ETロボコン2016コースでのカーブの中には、複数の曲率をもつカーブ（複数の円で構成されたカーブ）がありました。こういったカーブは、構成されている円の曲率に合わせてカーブ内を区切ると良いでしょう（図2）。

![course2.JPG](https://qiita-image-store.s3.amazonaws.com/0/153774/37c8f6b0-d890-8630-9167-34786bfd48db.jpeg)
図2：コースのエリア分割図（複数の円）


　といっても、あまりエリアの数が多くなってしまうと、あとで調整が大変になってしまうので、できる限りエリアの数は少なくなるように区切るのがいいでしょう。

###エリアの区間距離計測
　ここでは「Acrobat DC」内のツールで用意されている「ものさしツール」を利用して、エリアの区間距離を計測していきます。また、この測定方法で表示された数値はPDFデータ上での長さでしかないので、実際のコースでの長さを出すためにも、PDFデータの縮尺を考慮して、実寸距離を計算してください。（ちなみにETロボコン2016に公開されていた本番コースPDFデータは1/2縮尺でした）
　それでは、まずコースのPDFデータを「Acrobat DC」で開きます。その後、「ツール」タブをクリックします。
![DC1.JPG](https://qiita-image-store.s3.amazonaws.com/0/153774/bad004b6-120e-9548-0927-423f9ecee0f9.jpeg)

ツールの一覧からものさしを選択します。
![DC2.JPG](https://qiita-image-store.s3.amazonaws.com/0/153774/396acfd0-bf44-8fc2-4b85-7a930563456e.jpeg)

測定したい部分に合わせて「測定タイプ」を選択します。直線距離を測定したい場合は、一番左の「距離ツール」を選択してください。このタイプでは、二点間の距離が表示されます。（図中で表示されている距離は、ツールの矢印が見えやすいように、私が個人的に寸法を色々と調節した結果として表示されている数値なので、実際のコース上の距離とは異なります）
![DC3.JPG](https://qiita-image-store.s3.amazonaws.com/0/153774/7f3962ce-078e-1159-fbe2-e2cfa096140f.jpeg)

　カーブの距離を測定するためには「周辺ツール」を使います。これは複数点を指定して、その点間の距離の合計を表示するツールです。
![DC5.JPG](https://qiita-image-store.s3.amazonaws.com/0/153774/1cac8a24-b4fe-90c0-11d7-e00285326b10.jpeg)
　
　以上により、各エリアの区間距離を測定し終えたら、コース分析は終了です。

##エリア分割走行の実装
　エリア分割走行の実装方法ですが、簡単に言ってしまえば「走行距離から現在エリア位置を判別して、その現在位置のエリア情報に基づいて走行する」というだけです。とはいえ、この「エリア分割走行」には決まった形の実装方法があるわけではありませんので、以下に示すサンプルプログラムは「極力まで簡略化したエリア分割走行」の実装一例として用意しました。
###サンプルプログラムの解説
　今回のサンプルプログラムはデモ用として「ロボットが進んだ距離に応じてエリアの切り替えを実行し、現在走行中のエリア情報をLCD（EV3の液晶画面）に表示させる」という処理が記述されています。実行の際は、HackEVの車体を持ち上げて、タイヤの両輪を回してみてください。画面の表示が変わるはずです。

　まずは、エリア情報周辺の解説をします。今回管理しているエリア情報は「エリアの距離」「エリア内での走行速度」「エリア内でのP，I，D係数」の五つになります。サンプルプログラム上では  _Area_struct 型の配列 Area_Info[] の中に格納されています。ここで格納されているエリア情報は適当に数値を入力したダミーデータとなります。
　なお、このようにエリアを配列として管理する記述形式は、本当はあまり良い形式ではありません。今回はデモ用としてエリアを7つまでしか用意しませんでしたが、実際の走行ではそれ以上の数のエリアを管理することになります。そういった場合において、配列でエリアを管理してしまうと、長い行にわたってエリア情報を記述しなくてはならず、プログラムが読みにくくなります。さらにいうと、パラメータ値の調整作業の際にも微調整の度にビルドしなくてはならず、非常に面倒です。よってバグの温床にもなるので、余裕があればcsvファイルなどにまとめて管理するなどの工夫をしましょう。

　続いて、エリア情報内の各パラメータ値について説明します。
　「エリアの距離」とは、先程のコース分析で計測した「エリアの長さ」になります。ここではミリメートル単位で管理しています。
　「エリア内での走行速度」とは、そのエリア内では、どの程度の速さで走行するのかを示したパラメータ値になります。ここではモータに送る制御値として0～100の範囲の値で速度を制御します。本当であれば、ここは速度計などの関数を自作して、速度単位のパラメータ値でもって制御するのが一番なのですが、複雑になるので割愛します。
　「P，I，D係数」について知らないという場合は、「車体が綺麗に黒線に沿って走るための値」と思ってください。長くなってしまうので、ここでは詳しく説明いたしません。

　続いて、Area.cでは「エリアの更新」、「エリア情報の取得」の関数が記述されています。
　エリアの更新では、現在の走行距離とエリアの区間距離とを比較し、その区間距離まで走行したら、次のエリアに切り替えるという処理を行っています。なお、ここではエリアの切り替えの度に距離計をリセットしています。この処理は、長距離の走行中に蓄積されていく距離計の誤差をリセットするために行っています。
　app.cでは、主にLCDにエリア情報を出力させる処理が記述されています。エリアの切り替えが発生したら、LCDへの出力を実行するような処理となっています。そのほかの部分は、それぞれの更新を行う関数を呼び出しているだけです。
　なお、ここで利用されている計測器の関数は、私の過去の投稿記事で解説した計測器を利用しています。

###サンプルプログラム

```Area.c
#include "Area.h"

#define AREA_INFO_AMOUNT 7

/*エリア情報*/
_Area_struct Area_Info[AREA_INFO_AMOUNT] = {
   /* distance, speed, P, I, D */
	{100.0 , 100, 0.2, 0.4, 0.2}, /*0 直線*/
	{300.0 ,  50, 0.4, 0.4, 0.3}, /*1 右カーブ*/
	{100.0 ,  40, 0.2, 0.4, 0.1}, /*2 直線*/
	{200.0 , 100, 0.4, 0.2, 0.5}, /*3 2本橋*/
	{300.0 ,  70, 0.4, 0.3, 0.6}, /*4 直線*/
	{100.0 ,  80, 0.5, 0.3, 0.2}, /*5 左カーブ*/
	{200.0 , 100, 0.4, 0.2, 0.9}, /*6 直線*/
};

static int Area_curArea = 0; //現在走行中のエリア番号

/*********************************************
エリア情報を「更新するかの判定」と「更新の実行」を行う関数
true：エリア情報を更新する
false：エリア情報を更新しない
**********************************************/
bool_t Area_update() {
	float Area_curDistance = 0;

	Area_curDistance = Distance_getDistance();

	if( Area_curDistance &gt;= Area_Info[Area_curArea].distance ){
		Area_curArea++;
		Distance_init();
		return true;
	}

	return false;
}

/**********************************
エリア情報を取得する関数
***********************************/
_Area_struct Area_getAreaInfo() {
		return Area_Info[Area_curArea];
}
```

```Area.h
#ifndef _AREA_H_
#define _AREA_H_

#include "ev3api.h"
#include "Distance.h"

typedef struct Area_struct {
    float distance;
    float speed;
    float p;
    float i;
    float d;
} _Area_struct;

/*********************************************
エリア情報を「更新するかの判定」と「更新の実行」を行う関数
true：エリア情報を更新する
false：エリア情報を更新しない
**********************************************/
bool_t Area_update();

/**********************************
エリア情報を取得する関数
***********************************/
_Area_struct Area_getAreaInfo();
```

```app.c
#include "ev3api.h"
#include "app.h"
#include "Distance.h"
#include "Direction.h"
#include "Area.h"

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#if defined(BUILD_MODULE)
#include "module_cfg.h"
#else
#include "kernel_cfg.h"
#endif

#define DEBUG

#ifdef DEBUG
#define _debug(x) (x)
#else
#define _debug(x)
#endif

/* LCD周辺定義（特に気にしなくてもよい） */
#define CALIB_FONT (EV3_FONT_SMALL)
#define STR 5
#define CALIB_FONT_WIDTH (6/*TODO: magic number*/)
#define CALIB_FONT_HEIGHT (8/*TODO: magic number*/)

void main_task(intptr_t unused) {
	char str[STR][30];   // LCD出力用文字列変数
	float cur_dir = 0.0; // 方位計の現在値
	float cur_dis = 0.0; // 距離計の現在値
	_Area_struct cur_areaInfo; // 現在走行中のエリア情報

	/* モーター出力ポートの設定 */
	ev3_motor_config(EV3_PORT_C, LARGE_MOTOR);
	ev3_motor_config(EV3_PORT_B, LARGE_MOTOR);

	/* 計測器初期化 */
	Distance_init();
	Direction_init();

	while(1) {
		// 計測器更新 
		Distance_update();
		Direction_update();

		// 計測器の現在値を格納
		cur_dis = Distance_getDistance();
		cur_dir = Direction_getDirection();

		// エリア更新 -&gt; 更新されたらLCDに出力
		if(	Area_update() == true) {
			// ここからLCDに出力する処理（中身は気にしなくても良い）
			cur_areaInfo = Area_getAreaInfo();
			ev3_lcd_fill_rect(0, 0, EV3_LCD_WIDTH, EV3_LCD_HEIGHT, EV3_LCD_WHITE);
			sprintf(str[0], ".distance = %d", (int)cur_areaInfo.distance );
			sprintf(str[1], ".speed = %d"   , (int)cur_areaInfo.speed );
			sprintf(str[2], ".p = %d"       , (int)(cur_areaInfo.p * 10) );
			sprintf(str[3], ".i = %d"       , (int)(cur_areaInfo.i * 10) );
			sprintf(str[4], ".d = %d"       , (int)(cur_areaInfo.d * 10) );
			ev3_lcd_draw_string(str[0], 0, CALIB_FONT_HEIGHT*2);
			ev3_lcd_draw_string(str[1], 0, CALIB_FONT_HEIGHT*3);
			ev3_lcd_draw_string(str[2], 0, CALIB_FONT_HEIGHT*4);
			ev3_lcd_draw_string(str[3], 0, CALIB_FONT_HEIGHT*5);
			ev3_lcd_draw_string(str[4], 0, CALIB_FONT_HEIGHT*6);
			// ここまでLCDに出力する処理（中身は気にしなくても良い）
		}
		
	}
}
```

　エリア分割走行の解説は以上となります。このエリア分割走行の技術は、ETロボコンに出場するにあたって、多くのチームが工夫して実装している「キーポイント」ともいえる技術なので、まだ実装したことがないという場合は、コース分析と合わせて是非挑戦してみてください。
</TEXTAREA><INPUT name="commit" type="submit" value="Save changes" data-disable-with="Save changes"></FORM></DIV></SECTION></DIV>
<DIV class="col-sm-3">
<DIV class="socialButtons">
<DIV class="socialButtons_twitter"><A class="twitter-share-button" href="https://twitter.com/share" 
data-url="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" data-text="ETロボコンにおける自己位置の応用（エリア分割） with EV3    by @PsychoGundam009 on @Qiita">ツイート</A></DIV>
<DIV class="socialButtons_hatebu"><A title="はてブに追加" class="hatena-bookmark-button" 
href="http://b.hatena.ne.jp/entry/http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
data-hatena-bookmark-title="ETロボコンにおける自己位置の応用（エリア分割） with EV3   " 
data-hatena-bookmark-layout="simple-balloon"><IMG width="20" height="20" style="border: currentColor; border-image: none;" 
alt="はてブに追加" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/button-only@2x.png"></A>
<SCRIPT src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/bookmark_button.js" type="text/javascript" charset="utf-8" async="async"></SCRIPT>
</DIV>
<DIV class="socialButtons_googlePlus">
<DIV class="g-plusone" data-size="medium" data-href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9"></DIV></DIV>
<DIV class="socialButtons_facebook">
<DIV class="fb-like" data-href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
data-show-faces="false" data-share="false" data-layout="button_count" 
data-action="like"></DIV></DIV>
<DIV class="socialButtons_pocket"><A class="pocket-btn" data-lang="en" 
data-pocket-label="pocket" 
data-pocket-count="horizontal"></A></DIV></DIV><SECTION class="itemsShowAuthorInfo" 
itemtype="http://schema.org/Person" itemscope="" itemprop="author"><A href="http://qiita.com/TetsuroAkagawa"><IMG 
class="itemsShowAuthorInfo_userIcon" alt="" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/5QJm6PLv_normal.jpg" 
itemprop="image"></A>
<DIV class="itemsShowAuthorInfo_profileStats"><STRONG class="itemsShowAuthorInfo_userName" 
itemprop="name"><A href="http://qiita.com/TetsuroAkagawa" 
itemprop="url">TetsuroAkagawa</A></STRONG>
<DIV class="itemsShowAuthorInfo_contribution"><SPAN class="itemsShowAuthorInfo_count">9</SPAN><SPAN 
class="itemsShowAuthorInfo_unit">Contribution</SPAN></DIV>
<SCRIPT id="js-react-on-rails-context" type="application/json">null</SCRIPT>
 
<SCRIPT class="js-react-on-rails-component" type="application/json">{"component_name":"UserFollowButton","props":{"initial_followed_by":false,"position":"author-info","size":"btn-xs","url_name":"TetsuroAkagawa"},"trace":false,"dom_id":"UserFollowButton-react-component-82282ca5-e43b-4d97-9273-0123e1cac153"}</SCRIPT>
     
<DIV 
id="UserFollowButton-react-component-82282ca5-e43b-4d97-9273-0123e1cac153"></DIV></DIV><SECTION 
class="itemsShowAuthorPopularItems">
<H5 class="itemsShowAuthorPopularItems_sectionTitle">人気の投稿</H5>
<UL class="itemsShowAuthorPopularItems_posts list-unstyled">
  <LI itemtype="http://schema.org/Article" itemscope=""><A href="http://qiita.com/TetsuroAkagawa/items/ba6190f08d26df7cc8ad" 
  itemprop="url" data-label="AuthorPopularItemsAtSidebar" 
  track="click">ETロボコンにおける自己位置計測（その1、距離計編） with EV3</A></LI>
  <LI itemtype="http://schema.org/Article" itemscope=""><A href="http://qiita.com/TetsuroAkagawa/items/4e7de30523d9c7ec6241" 
  itemprop="url" data-label="AuthorPopularItemsAtSidebar" 
  track="click">ETロボコンにおける自己位置計測（その２、方位計編） with EV3</A></LI>
  <LI itemtype="http://schema.org/Article" itemscope=""><A href="http://qiita.com/TetsuroAkagawa/items/075d74f5ab49f592450b" 
  itemprop="url" data-label="AuthorPopularItemsAtSidebar" 
  track="click">ETロボコンにおける自己位置計測（その3、座標移動編） with EV3</A></LI>
  <LI itemtype="http://schema.org/Article" itemscope=""><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
  itemprop="url" data-label="AuthorPopularItemsAtSidebar" 
  track="click">ETロボコンにおける自己位置の応用（エリア分割） with EV3   
</A></LI></UL></SECTION></SECTION>
<DIV class="scroll-chaser">
<DIV class="ad_frame_right_banner_1"></DIV>
<SCRIPT src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/adjs_set_pro.js" defer="" type="text/javascript" charset="UTF-8" async=""></SCRIPT>
</DIV>
<SCRIPT class="js-react-on-rails-component" type="application/json">{"component_name":"Toc","props":{"body":"\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%A8%E3%83%AA%E3%82%A2%E5%88%86%E5%89%B2%E8%B5%B0%E8%A1%8C\"\u003eエリア分割走行\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%A8%E3%83%AA%E3%82%A2%E5%88%86%E5%89%B2%E8%B5%B0%E8%A1%8C%E3%81%A8%E3%81%AF\"\u003eエリア分割走行とは\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%82%B9%E5%88%86%E6%9E%90\"\u003eコース分析\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%82%B9%E5%88%86%E6%9E%90%E3%81%AE%E6%A6%82%E8%A6%81\"\u003eコース分析の概要\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%B3%E3%83%BC%E3%82%B9%E5%88%86%E6%9E%90%E3%81%AE%E6%89%8B%E9%A0%86\"\u003eコース分析の手順\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%AE%E5%88%86%E3%81%91%E6%96%B9\"\u003eエリアの分け方\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%A8%E3%83%AA%E3%82%A2%E3%81%AE%E5%8C%BA%E9%96%93%E8%B7%9D%E9%9B%A2%E8%A8%88%E6%B8%AC\"\u003eエリアの区間距離計測\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%A8%E3%83%AA%E3%82%A2%E5%88%86%E5%89%B2%E8%B5%B0%E8%A1%8C%E3%81%AE%E5%AE%9F%E8%A3%85\"\u003eエリア分割走行の実装\u003c/a\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AE%E8%A7%A3%E8%AA%AC\"\u003eサンプルプログラムの解説\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0\"\u003eサンプルプログラム\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n","wrapper":"#article-body-wrapper"},"trace":false,"dom_id":"Toc-react-component-f432af71-8a53-4275-8995-285b7ba61b41"}</SCRIPT>
     
<DIV 
id="Toc-react-component-f432af71-8a53-4275-8995-285b7ba61b41"></DIV></DIV></DIV>
<DIV class="row">
<DIV class="col-sm-9">
<DIV class="ArticleFooter__menu">
<DIV class="s-flex-align-center">
<DIV class="js-likebutton" data-props='{"like_status":false,"like_count":1,"show_count":true,"uuid":"1798c12e9517e6f1cbe9","likable_type":"Article","position":"article-footer"}'></DIV>
<DIV class="ArticleFooter__userList">
<DIV class="ArticleFooter__user">
<DIV class="js-hovercard" data-hovercard-target-name="mossandayo"><A href="http://qiita.com/mossandayo" 
itemprop="url"><IMG class="thumb thumb--xs" alt="mossandayo" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/1476924209.png"></A></DIV></DIV></DIV></DIV>
<DIV class="u-flex u-align-center">
<DIV class="ArticleFooter__stock">
<DIV class="js-stockbutton" data-props='{"stock_status":false}' data-position="footer_menu"></DIV></DIV>
<DIV class="ArticleFooter__editRequest"><A title="投稿者に記事をより良くするための提案ができます 💪" 
class="u-link-no-underline" href="http://qiita.com/drafts/1798c12e9517e6f1cbe9/edit" 
data-toggle="tooltip"><SPAN class="fa fa-send-o fa-lg"></SPAN> 
<SPAN>編集リクエスト</SPAN></A></DIV>
<DIV class="dropdown ArticleFooter__dropdown"><A class="dropdown-toggle" href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#" 
data-toggle="dropdown"><SPAN class="fa fa-ellipsis-h"></SPAN></A>
<UL class="dropdown-menu dropdown-menu-right">
  <LI><A 
  href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9.md"><SPAN 
  class="fa fa-fw fa-file-text-o"></SPAN> Markdownで本文を見る</A></LI>
  <LI><A href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9#" 
  data-toggle="modal" data-target=".js-report-form"><I 
  class="fa fa-fw fa-flag"></I> 問題がある投稿を報告する</A></LI></UL></DIV></DIV></DIV>
<UL class="references js-referencesView">
  <LI class="references_header"><I class="fa fa-fw fa-link"></I> 
  この記事は以下の記事からリンクされています</LI>
  <LI class="references_reference js-reference"><A href="http://qiita.com/mossandayo/items/fab3c1fc2a97bb0fbcfc#_reference-8a2f4f20e067818e3832"><IMG 
  width="18" height="18" alt="" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/1476924209.png">EV3に関する技術記事まとめ</A><SPAN>からリンク</SPAN><time 
  class="references_datetime js-dateTimeView" datetime="2017-02-16T00:34:59+00:00">4ヶ月前</time></LI></UL>
<DIV class="itemsShowBody_articleColumnFooter">
<DIV class="socialButtons">
<DIV class="socialButtons_twitter"><A class="twitter-share-button" href="https://twitter.com/share" 
data-url="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" data-text="ETロボコンにおける自己位置の応用（エリア分割） with EV3    by @PsychoGundam009 on @Qiita">ツイート</A></DIV>
<DIV class="socialButtons_hatebu"><A title="はてブに追加" class="hatena-bookmark-button" 
href="http://b.hatena.ne.jp/entry/http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
data-hatena-bookmark-title="ETロボコンにおける自己位置の応用（エリア分割） with EV3   " 
data-hatena-bookmark-layout="simple-balloon"><IMG width="20" height="20" style="border: currentColor; border-image: none;" 
alt="はてブに追加" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/button-only@2x.png"></A>
<SCRIPT src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/bookmark_button.js" type="text/javascript" charset="utf-8" async="async"></SCRIPT>
</DIV>
<DIV class="socialButtons_googlePlus">
<DIV class="g-plusone" data-size="medium" data-href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9"></DIV></DIV>
<DIV class="socialButtons_facebook">
<DIV class="fb-like" data-href="http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9" 
data-show-faces="false" data-share="false" data-layout="button_count" 
data-action="like"></DIV></DIV>
<DIV class="socialButtons_pocket"><A class="pocket-btn" data-lang="en" 
data-pocket-label="pocket" data-pocket-count="horizontal"></A></DIV></DIV></DIV>
<DIV class="itemsShowComment_wrapper" id="comments">
<SCRIPT class="js-react-on-rails-component" type="application/json">{"component_name":"PublicCommentListContainer","props":{"currentUser":null,"initialComments":[],"monthly_public_image_uploadable_size_limit":null,"total_uploaded_public_image_size_in_current_month":null,"item":{"id":464309,"uuid":"1798c12e9517e6f1cbe9","suspended":false,"secret":false},"owner":{"url_name":"TetsuroAkagawa"},"is_team":false,"is_project":false,"logged_in":false,"polling":false,"mention_candidates":[{"id":153774,"url_name":"TetsuroAkagawa","profile_image_url":"https://pbs.twimg.com/profile_images/596090876847259648/5QJm6PLv_normal.jpg"}]},"trace":false,"dom_id":"PublicCommentListContainer-react-component-bb82d99f-8229-44cf-bdc4-14be9876c52f"}</SCRIPT>
     
<DIV id="PublicCommentListContainer-react-component-bb82d99f-8229-44cf-bdc4-14be9876c52f"></DIV></DIV></DIV></DIV></DIV></ARTICLE>
<DIV class="js-report-form modal fade reportForm">
<DIV class="modal-dialog">
<DIV class="modal-content">
<DIV class="modal-header"><BUTTON name="button" class="close" type="submit" 
data-dismiss="modal">×</BUTTON>
<H4 class="modal-title">問題がある投稿を報告する</H4></DIV>
<DIV class="modal-body">
<FORM action="/reports" method="post" 
accept-charset="UTF-8"><INPUT name="utf8" type="hidden" value="✓"><INPUT name="authenticity_token" type="hidden" value="22E6C9HHEGhuN9tNV7L/AZJTOvHMspGPnuoP6nAYaGcctNGDrPoshvg83VzSZ+iP66gkSW2InJ6WQ9FtdLpo7Q=="><INPUT name="redirect_path" id="redirect_path" type="hidden" value="/TetsuroAkagawa/items/1798c12e9517e6f1cbe9"><INPUT name="item_uuid" id="item_uuid" type="hidden" value="1798c12e9517e6f1cbe9">
<P>この投稿にどのような問題がありますか？</P><BR>
<DIV class="form-group">
<UL class="list-unstyled">
  <LI><LABEL><INPUT name="report_type" id="report_type_spam" required="required" 
  type="radio" value="spam"> スパムです </LABEL></LI>
  <LI><LABEL><INPUT name="report_type" id="report_type_harassment" required="required" 
  type="radio" value="harassment"> 攻撃的または迷惑な内容を含んでいます </LABEL></LI>
  <LI><LABEL><INPUT name="report_type" id="report_type_inappropriate_content" 
  required="required" type="radio" value="inappropriate_content"> 不適切な内容を含んでいます 
  </LABEL></LI></UL></DIV>
<DIV class="reportForm_submitButtonContainer"><BUTTON name="button" class="btn btn-primary reportForm_submitButton" 
type="submit"><I class="fa fa-send"></I> 
送信</BUTTON></DIV></FORM></DIV></DIV></DIV></DIV>
<SCRIPT id="js-item" type="application/json">{ "url": "http://qiita.com/TetsuroAkagawa/items/1798c12e9517e6f1cbe9", "id": 464309, "uuid": "1798c12e9517e6f1cbe9" }</SCRIPT>

<SCRIPT class="js-user" type="application/json">{&quot;id&quot;:153774,&quot;url_name&quot;:&quot;TetsuroAkagawa&quot;,&quot;profile_image_url&quot;:&quot;https://pbs.twimg.com/profile_images/596090876847259648/5QJm6PLv_normal.jpg&quot;}</SCRIPT>

<SCRIPT language="JavaScript" src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/qiita_bigmining.js" type="text/javascript"></SCRIPT>
</DIV><FOOTER class="footer">
<DIV class="footer_inner">
<DIV class="footer_container">
<UL class="footer_links-left">
  <LI class="footer_link"><A class="footer_copyright" href="http://increments.co.jp/">© 
  2011-2017 Increments Inc.</A></LI>
  <LI class="footer_link"><A href="http://qiita.com/terms">利用規約</A></LI>
  <LI class="footer_link"><A href="http://qiita.com/privacy">プライバシー</A></LI>
  <LI class="footer_link"><A href="http://help.qiita.com/">ヘルプ</A></LI>
  <LI class="footer_link"><A href="https://increments.zendesk.com/anonymous_requests/new">お問い合わせ</A></LI></UL>
<UL class="footer_links-right">
  <LI class="footer_link"><A href="http://qiita.com/about">Qiitaとは</A></LI>
  <LI class="footer_link"><A href="http://qiita.com/users">ユーザー</A></LI>
  <LI class="footer_link"><A href="http://qiita.com/tags">タグ</A></LI>
  <LI class="footer_link"><A href="http://blog.qiita.com/">ブログ</A></LI>
  <LI class="footer_link"><A href="http://qiita.com/api/v2/docs">API</A></LI>
  <LI class="footer_link"><A href="https://teams.qiita.com/">Team</A></LI>
  <LI class="footer_link"><A href="http://kobito.qiita.com/">Kobito</A></LI>
  <LI class="footer_link"><A class="js-public-form-feedback-link" href="http://qiita.com/TetsuroAkagawa/items/" 
  data-toggle="modal" data-target=".js-feedback-form"><I 
  class="fa fa-heart"></I> ご意見 <I 
class="fa fa-caret-down"></I></A></LI></UL></DIV></DIV></FOOTER>
<DIV class="js-feedback-form modal fade feedbackForm">
<DIV class="modal-dialog">
<DIV class="modal-content">
<DIV class="modal-header"><BUTTON name="button" class="close" type="submit" 
data-dismiss="modal">×</BUTTON>
<H4 class="modal-title">ご意見</H4></DIV>
<DIV class="modal-body">
<FORM class="js-feedback-form-form" action="/feedbacks" method="post" 
accept-charset="UTF-8"><INPUT name="utf8" type="hidden" value="✓"><INPUT name="authenticity_token" type="hidden" value="WhQccsRGnAfmEC+chna4HxZispUtcltqQS9JAL4ABsedwff6uXug6XAbKY0Do6+Rb5msLYxIVntJhpeHuqIGTQ=="><INPUT name="redirect_path" id="redirect_path" type="hidden" value="/TetsuroAkagawa/items/1798c12e9517e6f1cbe9">
<DIV class="form-group"><TEXTAREA name="feedback[message]" class="form-control js-feedback-form-text-area" id="feedback_message" required="required" placeholder="Qiitaについてのご意見をお聞かせください。" rows="5">Qiitaについてのご意見をお聞かせください。</TEXTAREA></DIV>
<DIV class="feedbackForm_submitButtonContainer"><BUTTON name="button" class="btn btn-primary feedbackForm_submitButton" 
type="submit"><I class="fa fa-send"></I> 送信</BUTTON>
<P class="feedbackForm_note">いただいたご意見への返信は行っておりません。<BR>返信の必要な内容については、<A href="https://increments.zendesk.com/anonymous_requests/new">こちら</A> 
からお問い合わせください。</P></DIV>
<DIV style="top: -99999px; position: fixed; opacity: 0.0001;"><INPUT name="feedback[name]" type="text"></DIV></FORM></DIV></DIV></DIV></DIV>
<SCRIPT>// if (window.mixpanel instanceof Element) {
//   window.mixpanel = [];
// }
// (function(f,b){if(!b.__SV){var a,e,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
// for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=f.createElement("script");a.type="text/javascript";a.async=!0;a.src="//cdn.mxpnl.com/libs/mixpanel-2.2.min.js";e=f.getElementsByTagName("script")[0];e.parentNode.insertBefore(a,e)}})(document,window.mixpanel||[]);</SCRIPT>

<SCRIPT src="ETロボコンにおける自己位置の応用（エリア分割）%20with%20EV3%20-%20Qiita.files/public-ea9634d328dd01703100922f07784313.min.js"></SCRIPT>

<SCRIPT>
  (function () {
    var script = document.getElementsByTagName('script')[0];
    var load = function (src, id) {
      var el = document.createElement('script');
      el.async = true;
      el.src = src;
      el.id = id;
      script.parentNode.insertBefore(el, script);
    };
      // Optimizely
      load('//cdn.optimizely.com/js/52738645.js', 'optimizely-jssdk');
      // Google Analytics
      window._gaq = window._gaq || [];
      var isCareer = location.hostname.split('.')[0] == 'career';
      if (isCareer) {
        window._gaq.push(['_setAccount', 'UA-24675221-11']);
        window._gaq.push(['_setDomainName', 'qiita.com']);
      } else {
        window._gaq.push(['_setAccount', 'UA-24675221-1']);
      }
      window._gaq.push(['_setCustomVar', 1, 'logged_in', 'false', 2]);
      window._gaq.push(['_trackPageview']);
      var src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      load(src, 'google-analytics-jssdk');
    // Google Analytics - Universal Analytics
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'UA-24675221-12', {
          
        });
          ga('create', 'UA-90226750-1', { name: 'user' });
          ga('user.send', 'pageview');
        ga('set', 'dimension1', 'false');
        ga('set', 'dimension3', 'false');
      ga('require', 'displayfeatures');
      ga('set', 'forceSSL', true);
      ga('send', 'pageview');
    // Google Tag Manager
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-TBQWPN');
  })();
</SCRIPT>
 </BODY></HTML>
